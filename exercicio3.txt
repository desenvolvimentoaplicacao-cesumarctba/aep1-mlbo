GET
com capacidade de 1024 caracteres, este método é utilizado quando se quer passar poucas ou pequenas informações para realizar uma pesquisa ou simplesmente passar uma informação para outra página através da URL  . A função do método GET é pura e simplesmente recuperar um recurso existente no servidor. O resultado de uma requisição GET é “cacheável” pelo cliente, ou seja, fica no histórico do navegador.Ao clicar em um link (tag <a>), os dados ali contidos são enviados utilizando o método GET. Como os valores são passados pela URL e retornados ao cliente, as informações enviadas ficam visíveis, o que pode se tornar uma brecha na segurança, pois um visitante malicioso pode colocar algum código malicioso (SQL Injection, por exemplo) e fazer um belo estrago com o site, ou até mesmo o servidor.  

POST

Este método utiliza a URI (de Uniform Resource Identifier) para envio de informações ao servidor. A URI não é retornável ao cliente, o que torna o método POST mais seguro, pois não expõe os dados enviados no navegador. Como não tem limite de capacidade para envio de informações, este método se torna melhor que o GET. No POST, uma conexão paralela é aberta e os dados são passados por ela. Uma requisição por meio desse método sempre requer que as informações submetidas sejam incluídas no corpo da mensagem e formatadas como uma query string, além de conter cabeçalhos adicionais especificando seu tamanho e seu formato. Mesmo que alguém mau intencionado obtenha acesso aos dados enviados pelo método POST, sem o tamanho dos dados e o formato correto será impossível lê-los.
O envio de dados é feito através de formulários (tag <form>), onde são passadas informações para outra página que deverá estar habilitada a recebê-las. Por padrão a tag <form> envia dados utilizando o método GET. Para habilitar o método POST nos formulários é necessário incluir o atributo “method” com valor “POST”.